{
  "service": {
    "service": "tripcheck-service",
    "serviceObject": {
      "name": "tripcheck-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs22.x",
      "region": "ap-northeast-1",
      "stage": "dev",
      "memorySize": 256,
      "deploymentBucket": "tripcheck-deployment-dev",
      "apiGateway": {
        "shouldStartNameWithService": true
      },
      "httpApi": {
        "cors": true
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "PlanTable",
                "Arn"
              ]
            }
          ]
        }
      ],
      "environment": {
        "TABLE_NAME": "tripcheck-service-plans-dev",
        "GOOGLE_MAPS_API_KEY": "AIzaSyAxOVbTQafAOPKiRJrQ-3zl3PNVy-KYZuM"
      },
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "tripcheck-deployment-dev",
        "serverSideEncryption": "AES256"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetDashplanLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tripcheck-service-dev-get-plan"
            }
          },
          "GetDashplanDashbyDashidLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tripcheck-service-dev-get-plan-by-id"
            }
          },
          "CreateDashplanLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tripcheck-service-dev-create-plan"
            }
          },
          "UpdateDashplanLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tripcheck-service-dev-update-plan"
            }
          },
          "DeleteDashplanLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tripcheck-service-dev-delete-plan"
            }
          },
          "GetDashmapLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tripcheck-service-dev-get-map"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "tripcheck-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tripcheck-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tripcheck-service-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "tripcheck-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetDashplanLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "tripcheck-deployment-dev",
                "S3Key": "serverless/tripcheck-service/dev/1751382751660-2025-07-01T15:12:31.660Z/get-plan.zip"
              },
              "Handler": "src/functions/get-plan.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "tripcheck-service-dev-get-plan",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "tripcheck-service-plans-dev",
                  "GOOGLE_MAPS_API_KEY": "AIzaSyAxOVbTQafAOPKiRJrQ-3zl3PNVy-KYZuM"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "ReservedConcurrentExecutions": 5
            },
            "DependsOn": [
              "GetDashplanLogGroup"
            ]
          },
          "GetDashplanDashbyDashidLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "tripcheck-deployment-dev",
                "S3Key": "serverless/tripcheck-service/dev/1751382751660-2025-07-01T15:12:31.660Z/get-plan-by-id.zip"
              },
              "Handler": "src/functions/get-plan-by-id.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "tripcheck-service-dev-get-plan-by-id",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "tripcheck-service-plans-dev",
                  "GOOGLE_MAPS_API_KEY": "AIzaSyAxOVbTQafAOPKiRJrQ-3zl3PNVy-KYZuM"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "ReservedConcurrentExecutions": 5
            },
            "DependsOn": [
              "GetDashplanDashbyDashidLogGroup"
            ]
          },
          "CreateDashplanLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "tripcheck-deployment-dev",
                "S3Key": "serverless/tripcheck-service/dev/1751382751660-2025-07-01T15:12:31.660Z/create-plan.zip"
              },
              "Handler": "src/functions/create-plan.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "tripcheck-service-dev-create-plan",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "tripcheck-service-plans-dev",
                  "GOOGLE_MAPS_API_KEY": "AIzaSyAxOVbTQafAOPKiRJrQ-3zl3PNVy-KYZuM"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "ReservedConcurrentExecutions": 5
            },
            "DependsOn": [
              "CreateDashplanLogGroup"
            ]
          },
          "UpdateDashplanLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "tripcheck-deployment-dev",
                "S3Key": "serverless/tripcheck-service/dev/1751382751660-2025-07-01T15:12:31.660Z/update-plan.zip"
              },
              "Handler": "src/functions/create-plan.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "tripcheck-service-dev-update-plan",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "tripcheck-service-plans-dev",
                  "GOOGLE_MAPS_API_KEY": "AIzaSyAxOVbTQafAOPKiRJrQ-3zl3PNVy-KYZuM"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "ReservedConcurrentExecutions": 5
            },
            "DependsOn": [
              "UpdateDashplanLogGroup"
            ]
          },
          "DeleteDashplanLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "tripcheck-deployment-dev",
                "S3Key": "serverless/tripcheck-service/dev/1751382751660-2025-07-01T15:12:31.660Z/delete-plan.zip"
              },
              "Handler": "src/functions/delete-plan.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "tripcheck-service-dev-delete-plan",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "tripcheck-service-plans-dev",
                  "GOOGLE_MAPS_API_KEY": "AIzaSyAxOVbTQafAOPKiRJrQ-3zl3PNVy-KYZuM"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "ReservedConcurrentExecutions": 5
            },
            "DependsOn": [
              "DeleteDashplanLogGroup"
            ]
          },
          "GetDashmapLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "tripcheck-deployment-dev",
                "S3Key": "serverless/tripcheck-service/dev/1751382751660-2025-07-01T15:12:31.660Z/get-map.zip"
              },
              "Handler": "src/functions/get-map.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "tripcheck-service-dev-get-map",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "tripcheck-service-plans-dev",
                  "GOOGLE_MAPS_API_KEY": "AIzaSyAxOVbTQafAOPKiRJrQ-3zl3PNVy-KYZuM"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "ReservedConcurrentExecutions": 5
            },
            "DependsOn": [
              "GetDashmapLogGroup"
            ]
          },
          "GetDashplanLambdaVersionPI5aWVKrLtSEAYGjzHemb2C07cmm2qaGQzN1bBg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashplanLambdaFunction"
              },
              "CodeSha256": "6gt2WUTivx7RYZY+PUwCfkHczTIyX7pPo6U8dNLJyBM="
            }
          },
          "GetDashplanDashbyDashidLambdaVersionG2g7aGyGTiULtwMuJveSejsp2TJj8CzQlOlHwX1RYgM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashplanDashbyDashidLambdaFunction"
              },
              "CodeSha256": "6gt2WUTivx7RYZY+PUwCfkHczTIyX7pPo6U8dNLJyBM="
            }
          },
          "CreateDashplanLambdaVersionN9hR6DaTbBf2zN9lFVlTfZZego6OwqkU2x5ts0Mc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateDashplanLambdaFunction"
              },
              "CodeSha256": "6gt2WUTivx7RYZY+PUwCfkHczTIyX7pPo6U8dNLJyBM="
            }
          },
          "UpdateDashplanLambdaVersionD4XnNyQ426AYB9QMZXJ01LoGuceRFctKOAZ5Xpa8Rw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateDashplanLambdaFunction"
              },
              "CodeSha256": "6gt2WUTivx7RYZY+PUwCfkHczTIyX7pPo6U8dNLJyBM="
            }
          },
          "DeleteDashplanLambdaVersionRUC5tdyqDO8r1mUTJEJlW0X3WW6XUHZMxzNk1KI0Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteDashplanLambdaFunction"
              },
              "CodeSha256": "6gt2WUTivx7RYZY+PUwCfkHczTIyX7pPo6U8dNLJyBM="
            }
          },
          "GetDashmapLambdaVersiongEeqVILhiZHALTNJRficUXVDl2zviTPzVgojdvQ97QM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashmapLambdaFunction"
              },
              "CodeSha256": "6gt2WUTivx7RYZY+PUwCfkHczTIyX7pPo6U8dNLJyBM="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-tripcheck-service",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "AllowMethods": [
                  "OPTIONS",
                  "GET",
                  "POST",
                  "DELETE"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetDashplanLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashplanLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetDashplan": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashplanLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetV1Plans": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /v1/plans",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetDashplan"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetDashplan"
          },
          "GetDashplanDashbyDashidLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashplanDashbyDashidLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetDashplanDashbyDashid": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashplanDashbyDashidLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetV1PlansIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /v1/plans/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetDashplanDashbyDashid"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetDashplanDashbyDashid"
          },
          "CreateDashplanLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateDashplanLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateDashplan": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateDashplanLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostV1Plans": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /v1/plans",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateDashplan"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateDashplan"
          },
          "UpdateDashplanLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateDashplanLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateDashplan": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateDashplanLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostV1PlansIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /v1/plans/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateDashplan"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateDashplan"
          },
          "DeleteDashplanLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteDashplanLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteDashplan": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteDashplanLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteV1PlansIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /v1/plans/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteDashplan"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteDashplan"
          },
          "GetDashmapLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashmapLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetDashmap": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashmapLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetV1Maps": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /v1/maps",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetDashmap"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetDashmap"
          },
          "PlanTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tripcheck-service-plans-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "tripcheck-deployment-dev",
            "Export": {
              "Name": "sls-tripcheck-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetDashplanLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashplanLambdaVersionPI5aWVKrLtSEAYGjzHemb2C07cmm2qaGQzN1bBg"
            },
            "Export": {
              "Name": "sls-tripcheck-service-dev-GetDashplanLambdaFunctionQualifiedArn"
            }
          },
          "GetDashplanDashbyDashidLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashplanDashbyDashidLambdaVersionG2g7aGyGTiULtwMuJveSejsp2TJj8CzQlOlHwX1RYgM"
            },
            "Export": {
              "Name": "sls-tripcheck-service-dev-GetDashplanDashbyDashidLambdaFunctionQualifiedArn"
            }
          },
          "CreateDashplanLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateDashplanLambdaVersionN9hR6DaTbBf2zN9lFVlTfZZego6OwqkU2x5ts0Mc"
            },
            "Export": {
              "Name": "sls-tripcheck-service-dev-CreateDashplanLambdaFunctionQualifiedArn"
            }
          },
          "UpdateDashplanLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateDashplanLambdaVersionD4XnNyQ426AYB9QMZXJ01LoGuceRFctKOAZ5Xpa8Rw"
            },
            "Export": {
              "Name": "sls-tripcheck-service-dev-UpdateDashplanLambdaFunctionQualifiedArn"
            }
          },
          "DeleteDashplanLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteDashplanLambdaVersionRUC5tdyqDO8r1mUTJEJlW0X3WW6XUHZMxzNk1KI0Q"
            },
            "Export": {
              "Name": "sls-tripcheck-service-dev-DeleteDashplanLambdaFunctionQualifiedArn"
            }
          },
          "GetDashmapLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashmapLambdaVersiongEeqVILhiZHALTNJRficUXVDl2zviTPzVgojdvQ97QM"
            },
            "Export": {
              "Name": "sls-tripcheck-service-dev-GetDashmapLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-tripcheck-service-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-tripcheck-service-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "region": "ap-northeast-1",
      "tableName": "tripcheck-service-plans-dev"
    },
    "pluginsData": {},
    "functions": {
      "get-plan": {
        "handler": "src/functions/get-plan.handler",
        "reservedConcurrency": 5,
        "events": [
          {
            "httpApi": {
              "path": "/v1/plans",
              "method": "get",
              "authorizers": {
                "TripCheckJwtAuthorizer": {
                  "type": "jwt",
                  "identitySource": "$request.header.Authorization",
                  "audience": [
                    "74mtj0sj8kpi7bckr84o2fskie"
                  ],
                  "issuerUrl": "https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_fd8pKPCYd"
                }
              }
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/v1/plans"
          }
        ],
        "name": "tripcheck-service-dev-get-plan",
        "package": {
          "artifact": ".serverless/get-plan.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "GetDashplanLambdaVersionPI5aWVKrLtSEAYGjzHemb2C07cmm2qaGQzN1bBg"
      },
      "get-plan-by-id": {
        "handler": "src/functions/get-plan-by-id.handler",
        "reservedConcurrency": 5,
        "events": [
          {
            "httpApi": {
              "path": "/v1/plans/{id}",
              "method": "get",
              "authorizers": {
                "TripCheckJwtAuthorizer": {
                  "type": "jwt",
                  "identitySource": "$request.header.Authorization",
                  "audience": [
                    "74mtj0sj8kpi7bckr84o2fskie"
                  ],
                  "issuerUrl": "https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_fd8pKPCYd"
                }
              }
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/v1/plans/{id}"
          }
        ],
        "name": "tripcheck-service-dev-get-plan-by-id",
        "package": {
          "artifact": ".serverless/get-plan-by-id.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "GetDashplanDashbyDashidLambdaVersionG2g7aGyGTiULtwMuJveSejsp2TJj8CzQlOlHwX1RYgM"
      },
      "create-plan": {
        "handler": "src/functions/create-plan.handler",
        "reservedConcurrency": 5,
        "events": [
          {
            "httpApi": {
              "path": "/v1/plans",
              "method": "post",
              "authorizers": {
                "TripCheckJwtAuthorizer": {
                  "type": "jwt",
                  "identitySource": "$request.header.Authorization",
                  "audience": [
                    "74mtj0sj8kpi7bckr84o2fskie"
                  ],
                  "issuerUrl": "https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_fd8pKPCYd"
                }
              }
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/v1/plans"
          }
        ],
        "name": "tripcheck-service-dev-create-plan",
        "package": {
          "artifact": ".serverless/create-plan.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "CreateDashplanLambdaVersionN9hR6DaTbBf2zN9lFVlTfZZego6OwqkU2x5ts0Mc"
      },
      "update-plan": {
        "handler": "src/functions/create-plan.handler",
        "reservedConcurrency": 5,
        "events": [
          {
            "httpApi": {
              "path": "/v1/plans/{id}",
              "method": "post",
              "authorizers": {
                "TripCheckJwtAuthorizer": {
                  "type": "jwt",
                  "identitySource": "$request.header.Authorization",
                  "audience": [
                    "74mtj0sj8kpi7bckr84o2fskie"
                  ],
                  "issuerUrl": "https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_fd8pKPCYd"
                }
              }
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/v1/plans/{id}"
          }
        ],
        "name": "tripcheck-service-dev-update-plan",
        "package": {
          "artifact": ".serverless/update-plan.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "UpdateDashplanLambdaVersionD4XnNyQ426AYB9QMZXJ01LoGuceRFctKOAZ5Xpa8Rw"
      },
      "delete-plan": {
        "handler": "src/functions/delete-plan.handler",
        "reservedConcurrency": 5,
        "events": [
          {
            "httpApi": {
              "path": "/v1/plans/{id}",
              "method": "delete",
              "authorizers": {
                "TripCheckJwtAuthorizer": {
                  "type": "jwt",
                  "identitySource": "$request.header.Authorization",
                  "audience": [
                    "74mtj0sj8kpi7bckr84o2fskie"
                  ],
                  "issuerUrl": "https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_fd8pKPCYd"
                }
              }
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/v1/plans/{id}"
          }
        ],
        "name": "tripcheck-service-dev-delete-plan",
        "package": {
          "artifact": ".serverless/delete-plan.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "DeleteDashplanLambdaVersionRUC5tdyqDO8r1mUTJEJlW0X3WW6XUHZMxzNk1KI0Q"
      },
      "get-map": {
        "handler": "src/functions/get-map.handler",
        "reservedConcurrency": 5,
        "events": [
          {
            "httpApi": {
              "path": "/v1/maps",
              "method": "get",
              "authorizers": {
                "TripCheckJwtAuthorizer": {
                  "type": "jwt",
                  "identitySource": "$request.header.Authorization",
                  "audience": [
                    "74mtj0sj8kpi7bckr84o2fskie"
                  ],
                  "issuerUrl": "https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_fd8pKPCYd"
                }
              }
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/v1/maps"
          }
        ],
        "name": "tripcheck-service-dev-get-map",
        "package": {
          "artifact": ".serverless/get-map.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "GetDashmapLambdaVersiongEeqVILhiZHALTNJRficUXVDl2zviTPzVgojdvQ97QM"
      }
    },
    "resources": {
      "Resources": {
        "PlanTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "tripcheck-service-plans-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "tripcheck-service",
      "frameworkVersion": "4",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "patterns": [
          "!tests/**",
          "!src/**/*.test.ts",
          "!src/index.ts",
          "!**/*.map",
          "!**/*.md",
          "!node_modules/**/*",
          "!frontend/**",
          "!packages/**"
        ],
        "artifactsS3KeyDirname": "serverless/tripcheck-service/dev/code-artifacts",
        "deploymentBucket": "tripcheck-deployment-dev",
        "artifactDirectoryName": "serverless/tripcheck-service/dev/1751382751660-2025-07-01T15:12:31.660Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/tripcheck-service/dev/1751382751660-2025-07-01T15:12:31.660Z",
    "artifact": ""
  }
}